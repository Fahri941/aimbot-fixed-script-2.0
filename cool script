local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local CameraWorkspace = workspace.CurrentCamera

local AimbotEnabled = false
local LockedTarget = nil
local TargetList = {}
local CurrentTargetIndex = 1
local LastCameraAngle = nil
local Notifications = {}

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local AimbotToggle = Instance.new("TextButton")
local NotificationFrame = Instance.new("Frame")
local NotificationText = Instance.new("TextLabel")

ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 180, 0, 80)
Frame.Position = UDim2.new(0.5, -90, 0.3, 0)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.Active = true
Frame.Draggable = true

AimbotToggle.Parent = Frame
AimbotToggle.Size = UDim2.new(0.8, 0, 0, 30)
AimbotToggle.Position = UDim2.new(0.1, 0, 0.4, 0)
AimbotToggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
AimbotToggle.Text = "Aimbot: OFF"
AimbotToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
AimbotToggle.Font = Enum.Font.GothamBold
AimbotToggle.TextSize = 14

local function getAlivePlayers()
    local targets = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            table.insert(targets, player.Character.Head)
        end
    end
    return targets
end

AimbotToggle.MouseButton1Click:Connect(function()
    AimbotEnabled = not AimbotEnabled
    if AimbotEnabled then
        AimbotToggle.Text = "Aimbot: ON"
        AimbotToggle.BackgroundColor3 = Color3.fromRGB(80, 150, 80)
        TargetList = getAlivePlayers()
        if #TargetList > 0 then
            LockedTarget = TargetList[1]
        end
        local msg = "Aimbot Activated."
        local subMsg = "Locking Nearest Target."
        ShowNotification(msg, subMsg)
    else
        AimbotToggle.Text = "Aimbot: OFF"
        AimbotToggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
        LockedTarget = nil
        ShowNotification("Aimbot Disabled.", "Stopped Locking.")
    end
end)

RunService.RenderStepped:Connect(function()
    if AimbotEnabled and #TargetList > 1 then
        local CurrentCameraAngle = CameraWorkspace.CFrame.LookVector
        if LastCameraAngle then
            local dotProduct = CurrentCameraAngle:Dot(LastCameraAngle)

            if dotProduct < 0.98 then
                CurrentTargetIndex = (CurrentTargetIndex % #TargetList) + 1
                LockedTarget = TargetList[CurrentTargetIndex]
            end
        end
        LastCameraAngle = CurrentCameraAngle
    end

    if AimbotEnabled and LockedTarget then
        CameraWorkspace.CFrame = CFrame.new(CameraWorkspace.CFrame.Position, LockedTarget.Position)
    end
end)

local function ShowNotification(title, desc)
    local Notification = Instance.new("Frame")
    local NotificationTitle = Instance.new("TextLabel")
    local NotificationDesc = Instance.new("TextLabel")

    Notification.Parent = ScreenGui
    Notification.Size = UDim2.new(0, 200, 0, 50)
    Notification.Position = UDim2.new(0, 10, 0.4, #Notifications * 55)
    Notification.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Notification.BackgroundTransparency = 0.2
    Notification.BorderSizePixel = 0
    Notification.Visible = false
    table.insert(Notifications, Notification)

    NotificationTitle.Parent = Notification
    NotificationTitle.Size = UDim2.new(1, 0, 0.5, 0)
    NotificationTitle.Position = UDim2.new(0, 0, 0, 0)
    NotificationTitle.Text = title
    NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    NotificationTitle.Font = Enum.Font.GothamBold
    NotificationTitle.TextSize = 14
    NotificationTitle.BackgroundTransparency = 1

    NotificationDesc.Parent = Notification
    NotificationDesc.Size = UDim2.new(1, 0, 0.5, 0)
    NotificationDesc.Position = UDim2.new(0, 0, 0.5, 0)
    NotificationDesc.Text = desc
    NotificationDesc.TextColor3 = Color3.fromRGB(200, 200, 200)
    NotificationDesc.Font = Enum.Font.Gotham
    NotificationDesc.TextSize = 12
    NotificationDesc.BackgroundTransparency = 1

    Notification.Visible = true
    TweenService:Create(Notification, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = Notification.Position + UDim2.new(0, 0, 0, -5)}):Play()

    task.wait(5)

    for i, v in pairs(Notifications) do
        if v == Notification then
            table.remove(Notifications, i)
        end
    end
    Notification:Destroy()
end

ShowNotification("I (logo) about blank.", "Hello, welcome to my script")
ShowNotification("About Script.", "Made by M @fahriahmadsapura / discord blue app")
